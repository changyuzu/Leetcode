/*For any integer x, adding the negative value of x makes the sum add up to 0Put as an equation,  x + (-x) = 0So for any value n given in the problem, we can keep adding numbers that negate each other, starting from 1 to half of nIf n is an odd number, that means we'll need another digit other than the numbers negating each other, so we just add 0Update: changing the loop variable to n so we don't need a separate variable i. Both versions work.Was: for (int i=1; i<=n/2; i++)Is: while (n > 1)*/class Solution {public:    vector<int> sumZero(int n) {        vector<int> ans;        while (n > 1)        {            ans.push_back(n/2);            ans.push_back(-n/2);            n -= 2;        }        if (n == 1) ans.push_back(0);        return ans;    }};// class Solution {// public:    // vector<int> sumZero(int n) {        // vector<int> ans;        // if (n%2 == 1) ans.push_back(0);        // for (int i=1; i<=n/2; i++)        // {            // ans.push_back(i);            // ans.push_back(-i);        // }        // return ans;    // }// };